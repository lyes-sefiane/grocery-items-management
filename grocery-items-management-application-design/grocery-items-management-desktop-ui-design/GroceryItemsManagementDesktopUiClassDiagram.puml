@startuml
'https://plantuml.com/class-diagram

package Service <<Rectangle>> {

    interface IGroceryItemsManagementService {
       + {abstract} Mono<GroceryItemResource> insertOne(GroceryItemRecord groceryItemRecord);
       + {abstract} Flux<GroceryItemResource> findAll();
       + {abstract} Mono<GroceryItemResource> findOneBy(String id);
       + {abstract} Mono<GroceryItemResource> findOneAndUpdate(String id, GroceryItemRecord groceryItemRecord);
       + {abstract} Mono<Void> findOneAndDelete(String id);
    }

    class GroceryItemsManagementService {
       + Mono<GroceryItemResource> insertOne(GroceryItemRecord groceryItemRecord);
       + Flux<GroceryItemResource> findAll();
       + Mono<GroceryItemResource> findOneBy(String id);
       + Mono<GroceryItemResource> findOneAndUpdate(String id, GroceryItemRecord groceryItemRecord);
       + Mono<Void> findOneAndDelete(String id);
    }
}

package org.springframework.context <<Rectangle>> {
     interface ApplicationContext
}

package javafx.scene.layout <<Rectangle>> {
    class VBox
}

package Config <<Rectangle>> {
    class FxmlLoader {
        - ApplicationContext applicationContext
        + Parent load(URL url) throws IOException
    }
}

package Welcome <<Rectangle>> {
    class GroceryItemsManagementUiMainFxmlController {
        - JFXTreeView<String> groceryItemsManagementTreeView
        - VBox subFxmlContainerVBox
        - FxmlLoader fxmlLoader
        + void initialize ()
        + void initTreeView()
        + void groceryItemsManagementTreeViewOnClick(MouseEvent ignoredEvent)
        + void quitOnAction(ActionEvent ignoredEvent)
        + void loadAndDisplayUiBy(TreeItemEnum treeItemEnum)
    }
}

package GroceryItemsmanagement <<Rectangle>> {

    abstract class GroceryItemsManagementFxmlController {
        # ObservableList<GroceryItemResource> observableList = FXCollections.observableArrayList()
        # Consumer<GroceryItemResource> groceryItemResourceConsumer
        # Consumer<Throwable> doOnErrorConsumer
        # Consumer<GroceryItemResource> doOnCreateSuccessConsumer
        # Consumer<GroceryItemResource> doOnUpdateSuccessConsumer
        # Consumer<Void> doOnDeleteSuccessConsumer
    }

    abstract class CreateOrUpdateGroceryItemFxmlController {
        # void initComoBox(ComboBox<GroceryItemsCategoryEnum> comboBox, GroceryItemsCategoryEnum[] values)
        # void initSpinner(Spinner<Integer> spinner, int minValue, int maxValue, int initValue)
        # GroceryItemRecord buildGroceryItemRecord(String name, Integer quantity, String category)
    }

    class CreateGroceryItemFxmlController {
        - TextField nameTextField
        - Spinner<Integer> quantitySpinner
        - ComboBox<GroceryItemsCategoryEnum> categoryCombobox
        - IGroceryItemsManagementService groceryItemsManagementService
        + void initialize ()
        - void registerOnAction(ActionEvent ignoredEvent)
    }

    class FindAllGroceryItemsFxmlController {
        - TableView<GroceryItemResource> groceryItemsTableView
        - TextField filterTextField
        - ProgressBar progressBar;
        - GroceryItemsManagementService groceryItemsManagementService
        + void initialize ()
        - void setCellValueFactoryTableView()
        - void editOnAction(CustomTableCell customTableCell)
        - void deleteOnAction(CustomTableCell customTableCell)
        - void insertOnAction(ActionEvent ignoredEvent)
        - void doRefreshTableView(TableView<GroceryItemResource> groceryItemsTableView, GroceryItemResource groceryItemResource)
        - GroceryItemResource getTableRowValue(CustomTableCell customTableCell)
        - void initTableView()
        - void initFilteredTableRows()
        - Predicate<GroceryItemResource> groceryItemResourcePredicate(String text)
        - void setTableViewItems(ObservableList<GroceryItemResource> items)
        - void subscribeToGroceryItemResources()
    }

    class UpdateGroceryItemFxmlController {
        - TextField idTextField
        - TextField nameTextField
        - Spinner<Integer> quantitySpinner
        - ComboBox<GroceryItemsCategoryEnum> categoryCombobox
        - IGroceryItemsManagementService groceryItemsManagementService
        + void initialize (GroceryItemResource groceryItemResource)
        - void initEditForm(GroceryItemResource groceryItemResource)
        - void saveOnAction(ActionEvent ignoredEvent)
    }
}

package Url <<Rectangle>> {

    abstract class UrlFxmlController {
       # Hyperlink hyperlink
       # WebView webView
       # {abstract} String getUrl()
    }
}


package About <<Rectangle>> {

    class AboutMeFxmlController {
       # String websiteUrl
       # String getUrl()
    }
}

package GitHub <<Rectangle>> {

    class GitHubFxmlController {
       # String githubDocumentationUrl
       # String getUrl()
    }
}

package License <<Rectangle>> {

    class LicenseFxmlController {
       # String creativeCommonsUrl
       # String getUrl()
    }
}

package Swagger <<Rectangle>> {

    class SwaggerFxmlController {
       # String swaggerUiUrl
       # String getUrl()
    }
}

package Zipkin <<Rectangle>> {

    class ZipkinFxmlController {
       # String zipkinUrl
       # String getUrl()
    }
}

Welcome --* VBox
Welcome --* FxmlLoader

FxmlLoader --> ApplicationContext

GroceryItemsManagementFxmlController <|-- CreateOrUpdateGroceryItemFxmlController
GroceryItemsManagementFxmlController <|-- FindAllGroceryItemsFxmlController

CreateOrUpdateGroceryItemFxmlController <|-- CreateGroceryItemFxmlController
CreateOrUpdateGroceryItemFxmlController <|-- UpdateGroceryItemFxmlController

GroceryItemsManagementUiMainFxmlController -> FindAllGroceryItemsFxmlController
GroceryItemsManagementUiMainFxmlController -> CreateGroceryItemFxmlController
GroceryItemsManagementUiMainFxmlController -> UpdateGroceryItemFxmlController
GroceryItemsManagementUiMainFxmlController -> AboutMeFxmlController
GroceryItemsManagementUiMainFxmlController -> GitHubFxmlController
GroceryItemsManagementUiMainFxmlController -> LicenseFxmlController
GroceryItemsManagementUiMainFxmlController -> SwaggerFxmlController
GroceryItemsManagementUiMainFxmlController -> ZipkinFxmlController

FindAllGroceryItemsFxmlController --o GroceryItemsManagementService
FindAllGroceryItemsFxmlController --o GroceryItemsManagementService
FindAllGroceryItemsFxmlController -o GroceryItemsManagementService
CreateGroceryItemFxmlController --o GroceryItemsManagementService
UpdateGroceryItemFxmlController --o GroceryItemsManagementService

IGroceryItemsManagementService <|.. GroceryItemsManagementService

UrlFxmlController <|-- AboutMeFxmlController
UrlFxmlController <|-- GitHubFxmlController
UrlFxmlController <|-- LicenseFxmlController
UrlFxmlController <|-- SwaggerFxmlController
UrlFxmlController <|-- ZipkinFxmlController

@enduml