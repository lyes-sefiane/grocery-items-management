@startuml
'https://plantuml.com/activity-diagram-beta

start

:GroceryItemsManagementUiMainFxmlController;

:initTreeView();

switch ( groceryItemsManagementTreeView.getSelectionModel().getSelectedItem() )
        case ( Home : Default )
            #palegreen:loadAndDisplayUiBy(TreeItemEnum.HOME);
        case ( Grocery Items )
            #palegreen:loadAndDisplayUiBy(TreeItemEnum.GROCERY_ITEMS_MANAGEMENT);
            #palegreen:subscribeToGroceryItemResources();
            split
                -> doOnSuccess;
                #palegreen:repeat:groceryItemsObservableList.add(groceryItemResource);
                repeat while (More groceryItemResource to Consume ?) is (yes) not (no)
                #palegreen:setTableViewItems(groceryItemsObservableList);
            split again
                -> doOnError;
                #red:AlertMessage(Alert.AlertType.ERROR, HttpStatus.INTERNAL_SERVER_ERROR.toString(), throwable.getMessage());
                stop
            split again
                -> doOnComplete;
                #palegreen:progressBar.setProgress(1.0);
                stop
            end split
            switch ( Operation )
                case ( Edit )
                    #palegreen:clickOnEditButton();
                    #palegreen:editOnAction(CustomTableCell customTableCell);
                    #palegreen:loadAndDisplayUiBy(TreeItemEnum.UPDATE_GROCERY_ITEM);
                    #palegreen:initEditForm(GroceryItemResource groceryItemResource);
                    #palegreen:saveOnAction(ActionEvent ignoredEvent);
                    #palegreen:subscribe();
                    split
                    -> doOnSuccess;
                    #palegreen:AlertMessage(Alert.AlertType.INFORMATION, HttpStatus.OK.toString(), alertUpdateMessage + groceryItemResource.getGroceryItem().getId());

                    split again
                    -> doOnError;
                    #red:AlertMessage(Alert.AlertType.ERROR, HttpStatus.INTERNAL_SERVER_ERROR.toString(), throwable.getMessage());
                    stop
                    end split
                case ( Delete )
                    #palegreen:clickOnDeleteButton();
                    #palegreen:deleteOnAction(CustomTableCell customTableCell);
                    #palegreen:subscribe();
                    split
                     -> doOnSuccess;
                    #palegreen:AlertMessage(Alert.AlertType.INFORMATION, HttpStatus.OK.toString(), alertUpdateMessage + groceryItemResource.getGroceryItem().getId());
                    split again
                    -> doOnError;
                    #red:AlertMessage(Alert.AlertType.ERROR, HttpStatus.INTERNAL_SERVER_ERROR.toString(), throwable.getMessage());
                    stop
                    split again
                    -> doFinally;
                    #palegreen:doRefreshTableView(groceryItemsTableView, groceryItemResource);
                    end split
                case ( Create New Item )
                    #palegreen:clickOnInsertNewGroceryItemButton();
                    #palegreen:insertOnAction(ActionEvent ignoredEvent);
                    #palegreen:loadAndDisplayUiBy(TreeItemEnum.ADD_GROCERY_ITEM);
                    #palegreen:registerOnAction(ActionEvent ignoredEvent);
                    #palegreen:subscribe();
                    split
                     -> doOnSuccess;
                    #palegreen:AlertMessage(Alert.AlertType.INFORMATION, HttpStatus.CREATED.toString(), alertRegisterMessage + groceryItemResource.getGroceryItem().getId());

                    split again
                    -> doOnError;
                    #red:AlertMessage(Alert.AlertType.ERROR, HttpStatus.INTERNAL_SERVER_ERROR.toString(), throwable.getMessage());
                    stop
                    end split
            endswitch
        case ( Swagger )
            #palegreen:loadAndDisplayUiBy(TreeItemEnum.SWAGGER_UI);
            #palegreen:webView.getEngine().load(swaggerUiUrl);
            if(SWAGGER_UI loaded ?) then (no)
                #red:AlertMessage(Alert.AlertType.ERROR, HttpStatus.INTERNAL_SERVER_ERROR.toString(), throwable.getMessage());
                stop
            else (yes)
            #palegreen:displaySWAGGER_UI;
            endif
            switch ( Operation )
                case ( onUrlClickAction )
                    #palegreen:showDocument(swaggerUiUrl);
                     note right: Opens the specified URI in a new browser window or tab.
                case ( NONE )
            endswitch
        case ( Zipkin )
            #palegreen:loadAndDisplayUiBy(TreeItemEnum.ZIPKIN_UI);
            #palegreen:webView.getEngine().load(zipkinUrl);
             if(ZIPKIN_UI loaded ?) then (no)
                #red:AlertMessage(Alert.AlertType.ERROR, HttpStatus.INTERNAL_SERVER_ERROR.toString(), throwable.getMessage());
                stop
             else (yes)
                #palegreen:displayZIPKIN_UI;
             endif
             switch ( Operation )
                case ( onUrlClickAction )
                   #palegreen:showDocument(zipkinUrl);
                   note right: Opens the specified URI in a new browser window or tab.
                case ( NONE )
             endswitch
        case ( Documentation )
            #palegreen:loadAndDisplayUiBy(TreeItemEnum.GITHUB_DOCUMENTATION);
            #palegreen:webView.getEngine().load(githubDocumentationUrl);
             if(GITHUB_DOCUMENTATION loaded ?) then (no)
                #red:AlertMessage(Alert.AlertType.ERROR, HttpStatus.INTERNAL_SERVER_ERROR.toString(), throwable.getMessage());
                stop
             else (yes)
                #palegreen:displayGITHUB_DOCUMENTATION;
             endif
             switch ( Operation )
                case ( onUrlClickAction )
                   #palegreen:showDocument(githubDocumentationUrl);
                   note right: Opens the specified URI in a new browser window or tab.
                case ( NONE )
             endswitch
        case ( License )
            #palegreen:loadAndDisplayUiBy(TreeItemEnum.LICENSE);
            #palegreen:webView.getEngine().load(creativeCommonsUrl);
             if(LICENSE loaded ?) then (no)
                #red:AlertMessage(Alert.AlertType.ERROR, HttpStatus.INTERNAL_SERVER_ERROR.toString(), throwable.getMessage());
                stop
             else (yes)
                #palegreen:displayLICENSE;
             endif
             switch ( Operation )
                case ( onUrlClickAction )
                   #palegreen:showDocument(creativeCommonsUrl);
                   note right: Opens the specified URI in a new browser window or tab.
                case ( NONE )
             endswitch
        case ( About Me )
            #palegreen:loadAndDisplayUiBy(TreeItemEnum.ABOUT_ME);
            #palegreen:webView.getEngine().load(websiteUrl);
             if(BOUT_ME loaded ?) then (no)
                #red:AlertMessage(Alert.AlertType.ERROR, HttpStatus.INTERNAL_SERVER_ERROR.toString(), throwable.getMessage());
                stop
             else (yes)
                #palegreen:displayBOUT_ME;
             endif
             switch ( Operation )
                case ( onUrlClickAction )
                   #palegreen:showDocument(websiteUrl);
                   note right: Opens the specified URI in a new browser window or tab.
                case ( NONE )
             endswitch
endswitch

stop

@enduml
