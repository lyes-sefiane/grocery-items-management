# ==============================
# =        Application         =
# ==============================
spring.application.name=grocery-items-management-api-gateway
server.port=8080
logging.level.org.springframework.web: TRACE
logging.level.org.springframework.cloud.gateway: TRACE
logging.level.org.springframework.data.*.*: TRACE
logging.level.org.springframework.security: TRACE

# ==============================
# =      Consul Discovery      =
# ==============================
spring.cloud.consul.enabled=false
spring.cloud.gateway.discovery.locator.enabled=false

# ==============================
# =          Redis             =
# ==============================
spring.data.redis.repositories.enabled=false
spring.cache.type=NONE
spring.data.redis.database=0
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.password=whmc5DpRgmACmqj84dPXgfSqwRiH1sII


# ==============================
# =    Spring Cloud Gateway    =
# ==============================
spring.cloud.gateway.routes[0].id=grocery-items-management
# update the hiost file system
spring.cloud.gateway.default-filters.TokenRelay=
# Routes
spring.cloud.gateway.routes[0].uri=http://localhost:8081
spring.cloud.gateway.routes[0].predicates[0]=Path=/groceryitem/api/**
spring.cloud.gateway.routes[0].predicates[1]=Method=GET,POST,PUT,DELETE
spring.cloud.gateway.routes[0].filters[0].name=RequestRateLimiter
spring.cloud.gateway.routes[0].filters[0].args[redis-rate-limiter.replenishRate]=10
spring.cloud.gateway.routes[0].filters[0].args[redis-rate-limiter.burstCapacity]=20
spring.cloud.gateway.routes[0].filters[0].args[redis-rate-limiter.requestedTokens]=1
spring.cloud.gateway.routes[0].filters[0].args[key-resolver]=#{@customKeyResolver}

# https://andifalk.gitbook.io/spring-cloud-gateway-workshop/hands-on-labs/lab2
# Retry
spring.cloud.gateway.routes[0].filters[1].name=Retry
spring.cloud.gateway.routes[0].filters[1].args[retries]=2
spring.cloud.gateway.routes[0].filters[1].args[statuses]=SERVICE_UNAVAILABLE
spring.cloud.gateway.routes[0].filters[1].args[methods]=GET
spring.cloud.gateway.routes[0].filters[1].args[backoff.firstBackoff]=10ms
spring.cloud.gateway.routes[0].filters[1].args[backoff.maxBackoff]=50ms
spring.cloud.gateway.routes[0].filters[1].args[backoff.factor]=3
spring.cloud.gateway.routes[0].filters[1].args[backoff.basedOnPreviousValue]=false

# CircuitBreaker
spring.cloud.gateway.routes[0].filters[2].name=CircuitBreaker
spring.cloud.gateway.routes[0].filters[2].args[name]=groceryItemsManagementCircuitBreaker
spring.cloud.gateway.routes[0].filters[2].args[fallbackUri]=forward:/service-unavailable

# Oauth2 Resource Server
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:9000/realms/grocery-items-management-realm/protocol/openid-connect/certs

# Oauth2 Client
spring.security.oauth2.client.provider.keycloak.issuer-uri=	http://localhost:9000/realms/grocery-items-management-realm
spring.security.oauth2.client.registration.keycloak.client-id=grocery-items-management-client
spring.security.oauth2.client.registration.keycloak.client-secret=Us90Kumpcfiy6iRZLkrVhOiORVgu9IL7
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.scope=openid